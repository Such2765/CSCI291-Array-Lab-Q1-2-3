// Linking Libraries
#include <stdio.h>
#include <stdbool.h> // (For Boolean Data Types)

// Variables Used
#define SIZE 24
#define nRows 8
#define nCols 3

// Functions
void print_array(int array[], int length);
void print_matrix(int mat[][nCols], int rows);
bool isValid();
void remove_element();
void insert_element();
void reshape();
void trans_matrix();
bool found_duplicate();

int main() {
    int arr[SIZE];
    int arr2d[nRows][nCols];
    print_matrix(arr2d,nRows);

    return 0;
}

// Function to print the created 1D array
void print_array(int array[], int length){
    for(int i=0;i<length; i++)
        printf("array[%d]= %d\n", i, array[i]);
}

// Function to print the created 2D matrix 
void print_matrix(int mat[][nCols], int rows){
    for(int i=0; i<rows; i++){
        for(int j=0; j<nCols; j++)
            printf("mat[%d][%d]= %d\n", i,j, mat[i][j]);
            puts("");     
   }     
}

bool isValid(const int arr[],int length, int pos){
    printf("f");
}

void remove_element(int arr[],int length, int pos){
    printf("+");
}

void insert_element(int arr[],int length, int pos, int value){
    printf("+");
}

void reshape(const int arr[], int length, int nRows, int nCols, int arr2d[nRows][nCols]){
    printf("r");
}

void trans_matrix(int nRows, int nCols, const int mat[nRows][nCols], int mat[nCols][ nRows]){
    printf("t");
}

bool found_duplicate(int arr[],int length, â€¦.){
    printf("d");
}
