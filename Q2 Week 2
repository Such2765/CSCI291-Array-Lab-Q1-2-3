#include <stdio.h>

int main() {
    // Initialize variables
    int initial_balance = 1000;
    int balance = initial_balance;
    int transactions[] = {200, -150, -500, -400, -50, -200, 300}; // Example transactions
    int size = sizeof(transactions) / sizeof(transactions[0]); // Calculate the number of transactions
    int tobeprocessed[size]; // Array to store unprocessed transactions
    int unprocessed_count = 0; // Counter for the tobeprocessed array
    
    printf("Starting Balance: %d AED\n\n", balance);
    
    for (int i = 0; i < size; i++) {
        int transaction = transactions[i];
        
        // Check if the transaction is a withdrawal and if it exceeds the current balance
        if (transaction < 0 && -transaction > balance) {
            printf("Transaction %d (Withdrawal %d AED) is invalid due to insufficient funds.\n", i + 1, -transaction);
            tobeprocessed[unprocessed_count++] = transaction; // Store invalid transaction
            continue; // Skip to the next transaction
        }
        
        // Update balance for valid transaction
        balance += transaction;
        
        // Print the details of the valid transaction
        printf("Transaction %d: %s %d AED, New Balance: %d AED\n", i + 1, transaction > 0 ? "Deposit" : "Withdrawal", abs(transaction), balance);
        
        // Check if balance has reached zero
        if (balance == 0) {
            printf("\nBalance has reached zero. No further transactions will be processed.\n");
            // Store remaining transactions in tobeprocessed array
            for (int j = i + 1; j < size; j++) {
                tobeprocessed[unprocessed_count++] = transactions[j];
            }
            break; // Stop further processing
        }
    }
    
    // Display the final balance
    printf("\nFinal Balance: %d AED\n", balance);
    
    // Display the contents of the tobeprocessed array
    printf("Transactions to be processed later: ");
    if (unprocessed_count == 0) {
        printf("None\n");
    } else {
        for (int i = 0; i < unprocessed_count; i++) {
            printf("%d ", tobeprocessed[i]);
        }
        printf("\n");
    }
    
    return 0;
}
